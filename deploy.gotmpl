# Log in to container registry
{{if .RegistryPassword}}
echo {{.RegistryPassword}} | docker login {{.RegistryName}} -u {{.RegistryUsername}} --password-stdin
{{end}}

# Check if container exists & get current image hash
container_exists=$(docker ps -a -q -f name={{.ContainerName}})
if [ -z "$container_exists" ]; then
	echo "Container {{.ContainerName}} does not exist on {{.Host}}"
	current_image_hash=""
else
	current_image_hash=$(docker inspect {{.ContainerName}} -f '{{.Image}}')
	echo "Current Image Hash for {{.ContainerName}} on {{.Host}}: $current_image_hash"
fi

if [ "$current_image_hash" != "{{.DesiredImageHash}}" ]; then
	echo "Updating container to {{.DesiredImageHash}} on {{.Host}}"
	docker stop {{.ContainerName}} || echo "Failed to stop container %s"
	docker rm {{.ContainerName}} || echo "Failed to remove container %s"
	docker pull {{.Image}}
	docker run -d -p {{.NodePort}}:{{.TargetPort}} --name {{.ContainerName}} {{.EnvironmentVariables}} {{.Image}}
else
	echo "Container {{.ContainerName}} on {{.Host}} is already up-to-date"
fi

# Log out of container registry
{{if .RegistryPassword}}
docker logout {{.RegistryName}}
{{end}}
